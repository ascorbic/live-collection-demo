---
import { getLiveCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";

export const prerender = false;

const { entries: products, error } = await getLiveCollection("products", {
  first: 8,
});
const { entries: collections, error: collectionsError } =
  await getLiveCollection("collections", { first: 4 });
---

<Layout title="Astro Live Collections Demo">
  <main>
    <h1>Astro Live Collections Demo</h1>
    <p>
      This demo showcases Astro's experimental live content collections with a
      Shopify loader using mock.shop data.
    </p>
    <p>
      <a href="https://github.com/ascorbic/live-collection-demo">
        View on GitHub â†’
      </a>
    </p>

    {
      error && (
        <div class="error">
          <h2>Error loading products:</h2>
          <p>{error.message}</p>
        </div>
      )
    }

    {
      collectionsError && (
        <div class="error">
          <h2>Error loading collections:</h2>
          <p>{collectionsError.message}</p>
        </div>
      )
    }

    <section>
      <h2>Featured Collections</h2>
      {
        collections && collections.length > 0 ? (
          <div class="collections-grid">
            {collections.map((collection) => (
              <a
                href={`/collections/${collection.data.handle}`}
                class="collection-card"
              >
                {collection.data.image && (
                  <img
                    src={collection.data.image.url}
                    alt={collection.data.image.altText || collection.data.title}
                  />
                )}
                <h3>{collection.data.title}</h3>
                <p>{collection.data.description}</p>
              </a>
            ))}
          </div>
        ) : (
          <p>No collections available</p>
        )
      }
    </section>

    <section>
      <h2>Featured Products</h2>
      {
        products && products.length > 0 ? (
          <div class="products-grid">
            {products.map((product) => (
              <a href={`/products/${product.data.handle}`} class="product-card">
                {product.data.featuredImage && (
                  <img
                    src={product.data.featuredImage.url}
                    alt={
                      product.data.featuredImage.altText || product.data.title
                    }
                  />
                )}
                <h3>{product.data.title}</h3>
                <p class="price">
                  ${product.data.priceRange.minVariantPrice.amount}
                </p>
                <p class="availability">
                  {product.data.availableForSale ? "In Stock" : "Out of Stock"}
                </p>
              </a>
            ))}
          </div>
        ) : (
          <p>No products available</p>
        )
      }
    </section>

    <section>
      <ul>
        <li><a href="/products">Browse all products with filters</a></li>
        <li><a href="/collections">Browse all collections</a></li>
      </ul>
    </section>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 2rem;
    width: 1000px;
    max-width: calc(100% - 2rem);
    color: #e5e5e5;
    font-size: 16px;
    line-height: 1.6;
  }

  .error {
    background: #ff4444;
    color: white;
    padding: 1rem;
    border-radius: 8px;
    margin: 1rem 0;
  }

  .collections-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    margin: 2rem 0;
  }

  .collection-card {
    border: 1px solid #333;
    border-radius: 12px;
    padding: 1.5rem;
    text-decoration: none;
    color: #e5e5e5;
    transition: all 0.3s ease;
    background: rgba(255, 255, 255, 0.02);
    backdrop-filter: blur(10px);
  }

  .collection-card:hover {
    transform: translateY(-8px);
    border-color: #4ade80;
    background: rgba(255, 255, 255, 0.05);
    box-shadow: 0 20px 40px rgba(74, 222, 128, 0.1);
  }

  .collection-card img {
    width: 100%;
    height: 120px;
    object-fit: cover;
    border-radius: 4px;
    margin-bottom: 0.5rem;
  }

  .collection-card h3 {
    margin: 0.5rem 0;
    font-size: 1.2rem;
  }

  .collection-card p {
    margin: 0;
    font-size: 0.9rem;
    opacity: 0.8;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    margin: 2rem 0;
  }

  .product-card {
    border: 1px solid #333;
    border-radius: 12px;
    padding: 1.5rem;
    text-decoration: none;
    color: #e5e5e5;
    transition: all 0.3s ease;
    background: rgba(255, 255, 255, 0.02);
    backdrop-filter: blur(10px);
  }

  .product-card:hover {
    transform: translateY(-8px);
    border-color: #4ade80;
    background: rgba(255, 255, 255, 0.05);
    box-shadow: 0 20px 40px rgba(74, 222, 128, 0.1);
  }

  .product-card img {
    width: 100%;
    height: 160px;
    object-fit: cover;
    border-radius: 4px;
    margin-bottom: 0.5rem;
  }

  .product-card h3 {
    margin: 0.5rem 0;
    font-size: 1.1rem;
  }

  .price {
    font-weight: bold;
    color: #4ade80;
    margin: 0.25rem 0;
  }

  .availability {
    font-size: 0.9rem;
    margin: 0;
    opacity: 0.8;
  }

  section {
    margin: 3rem 0;
  }

  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 2rem 0;
    text-align: center;
    background: linear-gradient(135deg, #4ade80 0%, #22c55e 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  h2 {
    font-size: 2rem;
    font-weight: 600;
    margin: 3rem 0 1.5rem 0;
    color: #f5f5f5;
  }

  ul {
    list-style: none;
    padding: 0;
  }

  li {
    margin: 0.5rem 0;
  }

  a {
    color: #4ade80;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }
</style>
